Remover_Arvore_B(Tree, chave)
	Se Tree = null
		retorna null

	Se busca(Tree, chave) = null
		retorna ErroElementoNaoContido

	Se chave estiver em uma página folha
		Remove(chave)

		Se numero de chaves < d // A arvore precisa ser Redistribuida
			Checa se a soma da páginas com os irmãos possuem mais que ou igual a 2d em numero de chaves
			Se sim
				Redistribuição
			Se não
				Concatenação

	Se chave estiver em uma página não folha // Temos que colocar a chave em uma página folha
		Troca a chave com o seu imediatamente maior // Isto é, a chave que é maior que ele e menor que todas as outras a sua direita
		Remove(chave)

		Se numero de chaves < d // A arvore precisa ser Redistribuida
			Checa se a soma da páginas com os irmãos possuem mais que ou igual a 2d em numero de chaves
			Se sim
				Redistribuição
			Se não
				Concatenação


Redistribuição -
	A chave pai cai para a pagina onde foi removido a chave, se a chave foi removida a esquerda, a primeira chave do irmão sobe para onde estava o no pai, se for a direita, sera a ultima, isto é feito até as paginas filhas ficarem balanceadas

Concatenação - 
	Neste caso a Redistribuição não pode ser feita, logo a soma da página com o irmão da pagina possui < 2d chaves, iremos trazer a chave do pai para onde foi removido a chave, logo apos iremos unir as duas paginas filhas, como a pagina pai perdeu uma chave, ela tambem perde um dos ponteiros que apontava para a chave que foi concatenada
